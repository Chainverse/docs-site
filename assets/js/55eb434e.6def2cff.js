"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8874],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return k}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),o=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=o(e.components);return i.createElement(l.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=o(t),k=r,m=p["".concat(l,".").concat(k)]||p[k]||h[k]||a;return t?i.createElement(m,c(c({ref:n},d),{},{components:t})):i.createElement(m,c({ref:n},d))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var o=2;o<a;o++)c[o]=t[o];return i.createElement.apply(null,c)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,n,t){t(7294)},5064:function(e,n,t){t(7294),t(9443)},9443:function(e,n,t){var i=(0,t(7294).createContext)(void 0);n.Z=i},4298:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return d}});var i=t(7462),r=t(3366),a=(t(7294),t(3905)),c=(t(5064),t(8215),["components"]),s={sidebar_label:"T\u1ed5ng Quan",sidebar_position:1},l="Chainverse SDK for iOS",o={unversionedId:"sdk/ios/over-view",id:"sdk/ios/over-view",isDocsHomePage:!1,title:"Chainverse SDK for iOS",description:"C\xe0i \u0111\u1eb7t th\u1ee7 c\xf4ng",source:"@site/docs/sdk/ios/over-view.md",sourceDirName:"sdk/ios",slug:"/sdk/ios/over-view",permalink:"/docs/sdk/ios/over-view",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/sdk/ios/over-view.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"T\u1ed5ng Quan",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Market Place Service",permalink:"/docs/sdk/android/services/market-place"},next:{title:"V\xed",permalink:"/docs/sdk/ios/wallet"}},d=[{value:"C\xe0i \u0111\u1eb7t th\u1ee7 c\xf4ng",id:"c\xe0i-\u0111\u1eb7t-th\u1ee7-c\xf4ng",children:[]},{value:"T\xedch h\u1ee3p SDK",id:"t\xedch-h\u1ee3p-sdk",children:[{value:"Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u",id:"tr\u01b0\u1edbc-khi-b\u1eaft-\u0111\u1ea7u",children:[]},{value:"Kh\u1edfi t\u1ea1o Chainverse SDK",id:"kh\u1edfi-t\u1ea1o-chainverse-sdk",children:[]}]},{value:"License",id:"license",children:[]}],h={toc:d};function p(e){var n=e.components,t=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,i.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"chainverse-sdk-for-ios"},"Chainverse SDK for iOS"),(0,a.kt)("h3",{id:"c\xe0i-\u0111\u1eb7t-th\u1ee7-c\xf4ng"},"C\xe0i \u0111\u1eb7t th\u1ee7 c\xf4ng"),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-1-t\u1ea3i-xu\u1ed1ng-static-framework"},"B\u01b0\u1edbc 1: T\u1ea3i xu\u1ed1ng static framework"),(0,a.kt)("p",null,"T\u1ea3i xu\u1ed1ng ChainverseSDK_Framework.zip t\u1ea1i ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Chainverse/ios-sdk/releases"},"https://github.com/Chainverse/ios-sdk/releases")),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-2-gi\u1ea3i-n\xe9n"},"B\u01b0\u1edbc 2: Gi\u1ea3i n\xe9n"),(0,a.kt)("p",null,"Gi\u1ea3i n\xe9n file ChainverseSDK.framework.zip b\u1ea1n v\u1eeba t\u1ea3i xu\u1ed1ng c\xf3 nh\u1eefng file sau:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Chainverse.framework\nChainverseBundle.bundle\nBigInt.xcframework\nCryptoSwift.xcframework\nPromiseKit.xcframework\nSipHash.xcframework\nStarscream.xcframework\nSocketIO.xcframework\nsecp256k1.xcframework\n")),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-3-import-v\xe0o-d\u1ef1-\xe1n"},"B\u01b0\u1edbc 3: Import v\xe0o d\u1ef1 \xe1n"),(0,a.kt)("p",null,"K\xe9o t\u1ea5t c\u1ea3 nh\u1eefng file \u0111\xe3 gi\u1ea3i n\xe9n \u1edf B\u01b0\u1edbc 2 v\xe0o d\u1ef1 \xe1n c\u1ee7a b\u1ea1n "),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-4-embed-framework"},"B\u01b0\u1edbc 4. Embed framework"),(0,a.kt)("p",null,"Ch\u1ecdn Embed & Sign \u0111\u1ed1i v\u1edbi :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"BigInt.xcframework\nCryptoSwift.xcframework\nPromiseKit.xcframework\nSipHash.xcframework\nStarscream.xcframework\nSocketIO.xcframework\nsecp256k1.xcframework\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/5umw9yI.png",alt:"Docusaurus logo"})),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-5-t\u1ea1o-bridging-header"},"B\u01b0\u1edbc 5: T\u1ea1o Bridging Header"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"File -> New -> File"),(0,a.kt)("li",{parentName:"ul"},"Select Swift File"),(0,a.kt)("li",{parentName:"ul"},"T\u1ea1o 1 file .swift v\u1edbi t\xean b\u1ea5t k\xec.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/Wulhemz.png",alt:"Docusaurus logo"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Confirm Create Bridging Header .")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/5Yr786R.png",alt:"Docusaurus logo"})),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-6--thi\u1ebft-l\u1eadp-url-scheme"},"B\u01b0\u1edbc 6:  Thi\u1ebft l\u1eadp Url scheme"),(0,a.kt)("p",null,"B\u1ea1n c\u1ea7n thi\u1ebft l\u1eadp Url scheme \u0111\u1ec3  connect v\u1edbi v\xed Chainverse"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/otRESxJ.png",alt:"Docusaurus logo"})),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-7-config-application-schemes"},"B\u01b0\u1edbc 7. Config Application Schemes"),(0,a.kt)("p",null,'B\u1ea1n ph\u1ea3i thi\u1ebft l\u1eadp "chainverse" trong file Info.Plist \u0111\u1ec3 connect v\u1edbi v\xed Chainverse. '),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<key>LSApplicationQueriesSchemes</key>\n<array>\n   <string>chainverse</string>\n</array>\n\n")),(0,a.kt)("h2",{id:"t\xedch-h\u1ee3p-sdk"},"T\xedch h\u1ee3p SDK"),(0,a.kt)("h3",{id:"tr\u01b0\u1edbc-khi-b\u1eaft-\u0111\u1ea7u"},"Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u"),(0,a.kt)("p",null,"B\u1ea1n ph\u1ea3i c\xe0i \u0111\u1eb7t Chainverse SDK (xem H\u01b0\u1edbng d\u1eabn)."),(0,a.kt)("p",null,"T\xe0i li\u1ec7u n\xe0y ch\u1ee9a c\xe1c tham s\u1ed1 b\u1eaft bu\u1ed9c. B\u1ea1n ph\u1ea3i \u0111\u1ea3m b\u1ea3o khai b\xe1o ch\xfang."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},'"Game Address": \u0110\u1ecba ch\u1ec9 contract c\u1ee7a game.'),(0,a.kt)("li",{parentName:"ol"},'"Developer Address": \u0110\u1ecba ch\u1ec9 contract c\u1ee7a developer.'),(0,a.kt)("li",{parentName:"ol"},'"App Scheme": Khai b\xe1o scheme \u0111\u1ec3 connect Chainverse.')),(0,a.kt)("h3",{id:"kh\u1edfi-t\u1ea1o-chainverse-sdk"},"Kh\u1edfi t\u1ea1o Chainverse SDK"),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-1-import-dependencies"},"B\u01b0\u1edbc 1: Import dependencies"),(0,a.kt)("p",null,"Import Chainverse v\xe0 ChainverseSDKCallback to AppDelegate "),(0,a.kt)("h5",{id:"objective-c"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#import "Chainverse/ChainverseSDK.h"\n#import "Chainverse/ChainverseSDKCallback.h"\n#import "Chainverse/ChainverseItem.h"\n#import "Chainverse/ChainverseNFT.h"\n#import "Chainverse/ChainverseSDKError.h"\n\n@interface AppDelegate () <ChainverseSDKCallback>\n\n@end\n')),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-2-kh\u1edfi-t\u1ea1o-sdk"},"B\u01b0\u1edb\u200bc 2: Kh\u1edfi t\u1ea1o SDK"),(0,a.kt)("p",null,"Trong didFinishLaunchingWithOptions khai b\xe1o Game Contract Address v\xe0 Developer Contract Address"),(0,a.kt)("h5",{id:"objective-c-1"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[ChainverseSDK shared].developerAddress = @"DeveloperAddress";\n[ChainverseSDK shared].gameAddress = @"GameAddress";\n[ChainverseSDK shared].scheme = @"your-app-scheme://";\n[ChainverseSDK shared].delegate = self;\n[[ChainverseSDK shared] initialize];\n')),(0,a.kt)("h4",{id:"b\u01b0\u1edbc-3-implement-c\xe1c-h\xe0m-callback"},"B\u01b0\u1edbc 3: Implement c\xe1c h\xe0m callback"),(0,a.kt)("h4",{id:"1-callback-didinitsdksuccess"},"1. Callback didInitSDKSuccess"),(0,a.kt)("p",null,"Khi kh\u1edfi t\u1ea1o SDK callback s\u1ebd \u0111\u01b0\u1ee3c g\u1eedi l\u1ea1i, \u0111\u1ec3 th\xf4ng b\xe1o l\xe0 \u0111\xe3 kh\u1edfi t\u1ea1o th\xe0nh c\xf4ng."),(0,a.kt)("p",null,"L\u01b0u \xfd: C\xe1c ch\u1ee9c n\u0103ng trong SDK s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c th\u1ef1c thi, n\u1ebfu qu\xe1 tr\xecnh kh\u1edfi t\u1ea1o SDK b\u1ecb l\u1ed7i. V\xe0 kh\xf4ng c\xf3 callback didInitSDKSuccess. M\xe3 l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c callback \u1edf h\xe0m didError."),(0,a.kt)("h5",{id:"objective-c-2"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didInitSDKSuccess{ \n}\n")),(0,a.kt)("h4",{id:"2-callback-diderror"},"2. Callback didError"),(0,a.kt)("p",null,"Khi kh\u1edfi t\u1ea1o SDK ho\u1eb7c c\xf3 b\u1ea5t k\u1ef3 l\u1ed7i n\xe0o x\u1ea3 ra s\u1ebd c\xf3 callback n\xe0y. Th\xf4ng tin tr\u1ea3 v\u1ec1 l\xe0 m\xe3 l\u1ed7i. B\u1ea1n c\xf3 th\u1ec3 xem t\u1ea5t c\u1ea3 m\xe3 l\u1ed7i \u1edf trang Error  Codes ."),(0,a.kt)("h5",{id:"objective-c-3"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didError:(int)error{\n    \n}\n")),(0,a.kt)("h4",{id:"3-callback-didconnectsuccess"},"3. Callback didConnectSuccess"),(0,a.kt)("p",null,"Khi user connect t\u1edbi v\xed Chainverse th\xe0nh c\xf4ng th\xec s\u1ebd c\xf3 callback n\xe0y. Th\xf4ng tin tr\u1ea3 v\u1ec1 l\xe0 \u0111\u1ecba ch\u1ec9 v\xed c\u1ee7a user. "),(0,a.kt)("h5",{id:"objective-c-4"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didConnectSuccess:(NSString *)address{\n    \n}\n")),(0,a.kt)("h4",{id:"4-callback-didlogout"},"4. Callback didLogout"),(0,a.kt)("p",null,"Khi user th\u1ef1c hi\u1ec7n thao t\xe1c \u0111\u0103ng xu\u1ea5t callback n\xe0y s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi. Th\xf4ng tin tr\u1ea3 v\u1ec1 l\xe0 \u0111\u1ecba ch\u1ec9 v\xed c\u1ee7a user. "),(0,a.kt)("h5",{id:"objective-c-5"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didLogout:(NSString *)address{\n   \n}\n")),(0,a.kt)("h4",{id:"5-callback-didgetlistitemmarket"},"5. Callback didGetListItemMarket"),(0,a.kt)("p",null,"Khi h\xe0m ",(0,a.kt)("inlineCode",{parentName:"p"},"[[ChainverseSDK shared] getListItemOnMarket];")," callback n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 danh s\xe1ch NFT trong ch\u1ee3."),(0,a.kt)("p",null,"B\u1ea1n s\u1ebd x\u1eed l\xfd NFT trong ch\u1ee3 c\u1ee7a b\u1ea1n \u1edf callback n\xe0y."),(0,a.kt)("h5",{id:"objective-c-6"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didGetListItemMarket:(NSArray<ChainverseNFT> *) items{\n    \n}\n")),(0,a.kt)("h4",{id:"6-callback-didgetdetailitem"},"6. Callback didGetDetailItem"),(0,a.kt)("p",null,"Khi h\xe0m g\u1ecdi ",(0,a.kt)("inlineCode",{parentName:"p"},"[[ChainverseSDK shared] getDetailNFT:{nft_address} tokenId:{tokenId}];")," callback n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 th\xf4ng tin detail c\u1ee7a NFT."),(0,a.kt)("p",null,"B\u1ea1n s\u1ebd x\u1eed l\xfd NFT trong ch\u1ee3 c\u1ee7a b\u1ea1n \u1edf callback n\xe0y."),(0,a.kt)("h5",{id:"objective-c-7"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didGetDetailItem:(ChainverseNFT*)item{\n    \n}\n")),(0,a.kt)("h4",{id:"7-callback-didgetmyassets"},"7. Callback didGetMyAssets"),(0,a.kt)("p",null,"Khi h\xe0m g\u1ecdi ",(0,a.kt)("inlineCode",{parentName:"p"},"[[ChainverseSDK shared] getMyAsset];")," callback n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 danh s\xe1ch NFT c\u1ee7a user"),(0,a.kt)("p",null,"B\u1ea1n s\u1ebd x\u1eed l\xfd NFT c\u1ee7a b\u1ea1n \u1edf callback n\xe0y."),(0,a.kt)("h5",{id:"objective-c-8"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didGetMyAssets:(NSArray<ChainverseNFT> *) items{\n    \n}\n")),(0,a.kt)("h4",{id:"8-callback-diditemupdate"},"8. Callback didItemUpdate"),(0,a.kt)("p",null,"Khi\u200b chuy\u1ec3n NFT qua l\u1ea1i gi\u1eefa user - user trong 1 game, v\xe0 chuy\u1ec3n t\u1eeb game n\xe0y sang game kia. Callback n\xe0y s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi REALTIME. Th\xf4ng tin tr\u1ea3 v\u1ec1 l\xe0 01 NFT \u0111\xe3 move."),(0,a.kt)("p",null,"B\u1ea1n s\u1ebd x\u1eed l\xfd NFT trong game c\u1ee7a b\u1ea1n \u1edf callback n\xe0y."),(0,a.kt)("h5",{id:"objective-c-9"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didItemUpdate:(ChainverseItem *)item type:(int)type{\n    switch (type) {\n        case TRANSFER_ITEM_TO_USER:\n            //X\u1eed l\xfd NFT trong game khi NFT chuy\u1ec3n t\u1edbi t\xe0i kho\u1ea3n c\u1ee7a b\u1ea1n\n            break;\n        case TRANSFER_ITEM_FROM_USER:\n            //X\u1eed l\xfd NFT trong game khi NFT c\u1ee7a b\u1ea1n chuy\u1ebfn t\u1eddi t\xe0i kho\u1ea3n kh\xe1c\n            break;\n    }\n}\n")),(0,a.kt)("h4",{id:"9-callback-didtransact"},"9. Callback didTransact"),(0,a.kt)("p",null,"Callback n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 transaction hash v\xe0 function khi th\u1ef1c hi\u1ec7n c\xe1c ch\u1ee9c n\u0103ng blockchain"),(0,a.kt)("h5",{id:"objective-c-10"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didTransact:(int)function tx:(NSString *)tx{\n   //C\xe1c function\n   /*\n     approveToken = 1,\n     approveNFT = 2,\n     buyNFT = 3,\n     bidNFT = 4,\n     sellNFT = 5,\n     cancelSell = 6,\n     withdrawItem = 7,\n     moveService = 8,\n     transferItem = 9*/\n    \n}\n")),(0,a.kt)("h4",{id:"10-callback-didsignmessage"},"10. Callback didSignMessage"),(0,a.kt)("p",null,"Khi g\u1ecdi h\xe0m  ",(0,a.kt)("inlineCode",{parentName:"p"},'[[ChainverseSDK shared] signMessage:@"message_can_ki"]')," Callback n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 ch\u1eef k\xfd c\u1ee7a message c\u1ea7n k\xfd"),(0,a.kt)("h5",{id:"objective-c-11"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- (void)didSignMessage:(NSString *)signedMessage{\n    \n}\n")),(0,a.kt)("h4",{id:"full-example"},"Full example"),(0,a.kt)("h5",{id:"objective-c-12"},"Objective C"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#import "AppDelegate.h"\n#import "Chainverse/ChainverseSDK.h"\n#import "Chainverse/ChainverseSDKCallback.h"\n#import "Chainverse/ChainverseItem.h"\n#import "Chainverse/ChainverseNFT.h"\n#import "Chainverse/ChainverseSDKError.h"\n@interface AppDelegate ()<ChainverseSDKCallback>\n\n@end\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    \n    [ChainverseSDK shared].developerAddress = @"0x690FDdc2a98050f924Bd7Ec5900f2D2F49b6aEC7";\n    [ChainverseSDK shared].gameAddress = @"0x3F57BF31E55de54306543863E079aD234f477b88";\n    [ChainverseSDK shared].scheme = @"your-app-scheme://";\n    [ChainverseSDK shared].delegate = self;\n    [[ChainverseSDK shared] initialize];\n    [[ChainverseSDK shared] setIsKeepConnectWallet:TRUE];\n    \n    NSLog(@"ChainverSDK Verison %@",[[ChainverseSDK shared] getVersion]);\n    \n    return YES;\n}\n\n- (void)didInitSDKSuccess{\n    \n}\n\n- (void)didConnectSuccess:(NSString *)address{\n    \n    ChainverseUser *info = [[ChainverseSDK shared] getUser];\n    NSLog(@"nampv_caddress %@",[info address]);\n    NSLog(@"nampv_csign %@",[info signature]);\n}\n\n- (void)didLogout:(NSString *)address{\n    \n   \n}\n\n- (void)didError:(int)error{\n    switch (error) {\n        case ERROR_WAITING_INIT_SDK:\n            \n            break;\n            \n        default:\n            break;\n    }\n    NSLog(@"didError %d",error);\n}\n\n\n- (void)didGetDetailItem:(ChainverseNFT*)item{\n   \n}\n\n- (void)didItemUpdate:(ChainverseItem *)item type:(int)type{\n    switch (type) {\n        case TRANSFER_ITEM_TO_USER:\n            //X\u1eed l\xfd item trong game khi item NFT chuy\u1ec3n t\u1edbi t\xe0i kho\u1ea3n c\u1ee7a b\u1ea1n\n            NSLog(@"nampv_transfer_to %@",item);\n            break;\n        case TRANSFER_ITEM_FROM_USER:\n            //X\u1eed l\xfd item trong game khi item NFT c\u1ee7a b\u1ea1n chuy\u1ebfn t\u1eddi t\xe0i kho\u1ea3n kh\xe1c\n            NSLog(@"nampv_transfer_from %@",item);\n            break;\n    }\n}\n\n- (void)didSignMessage:(NSString *)signedMessage{\n    \n}\n\n- (void)didGetListItemMarket:(NSArray<ChainverseNFT> *) items{\n    \n}\n\n- (void)didGetMyAssets:(NSArray<ChainverseNFT> *) items{\n    \n}\n\n- (void)didTransact:(int)function tx:(NSString *)tx{\n    \n    \n}\n\n- (BOOL)application:(UIApplication *)app\n                    openURL:(NSURL *)url\n                    options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> *)options\n{\n    return [[ChainverseSDK shared] handleOpenUrl:(UIApplication *)app\n                              openURL:(NSURL *)url\n                              options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> *)options];\n    return true;\n}\n\n\n@end\n\n')),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"Chainverse SDK iOS s\u1eed d\u1ee5ng nh\u1eefng th\u01b0 vi\u1ec7n sau:"),(0,a.kt)("h5",{id:"1-afnetworking"},"1. AFNetworking"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"License: MIT License"),(0,a.kt)("li",{parentName:"ul"},"Home page: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/AFNetworking/AFNetworking"},"https://github.com/AFNetworking/AFNetworking")),(0,a.kt)("li",{parentName:"ul"},"M\u1ee5c \u0111\xedch s\u1eed d\u1ee5ng: \u0110\u1ec3 k\u1ebft n\u1ed1i REST (API)")),(0,a.kt)("h5",{id:"2-socket-io"},"2. Socket io"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"License: MIT License"),(0,a.kt)("li",{parentName:"ul"},"Home page: ",(0,a.kt)("a",{parentName:"li",href:"https://socket.io/"},"https://socket.io/")),(0,a.kt)("li",{parentName:"ul"},"M\u1ee5c \u0111\xedch s\u1eed d\u1ee5ng: X\u1eed l\xfd realtime")),(0,a.kt)("h5",{id:"3-web3swift"},"3. Web3swift"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"License: MIT License"),(0,a.kt)("li",{parentName:"ul"},"Home page: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/skywinder/web3swift"},"https://github.com/skywinder/web3swift")),(0,a.kt)("li",{parentName:"ul"},"M\u1ee5c \u0111\xedch s\u1eed d\u1ee5ng: K\u1ebft n\u1ed1i blockchain")),(0,a.kt)("h5",{id:"4-promisekit"},"4. PromiseKit"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"License: MIT License"),(0,a.kt)("li",{parentName:"ul"},"Home page: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mxcl/PromiseKit"},"https://github.com/mxcl/PromiseKit")),(0,a.kt)("li",{parentName:"ul"},"M\u1ee5c \u0111\xedch s\u1eed d\u1ee5ng: X\u1eed l\xfd b\u1ea5t \u0111\u1ed3ng b\u1ed9/\u0111\u1ed3ng b\u1ed9 khi k\u1ebft n\u1ed1i API, blockchain")))}p.isMDXComponent=!0}}]);